package io.mosn.coder.intellij.template;



import io.mosn.coder.intellij.option.PluginOption;
import io.mosn.coder.intellij.util.CodeBuilder;
import io.mosn.coder.intellij.util.FileReader;

import java.util.logging.Logger;

/**
 * @author yiji@apache.org
 */
public abstract class AbstractCodeTemplate<T extends PluginOption> implements Template<T> {

    protected final Logger LOG = Logger.getLogger(getClass().getName());

    protected static void appendLicense(CodeBuilder buffer) {
        buffer.append("/*")
                .append(" * Licensed to the Apache Software Foundation (ASF) under one or more")
                .append(" * contributor license agreements.  See the NOTICE file distributed with")
                .append(" * this work for additional information regarding copyright ownership.")
                .append(" * The ASF licenses this file to You under the Apache License, Version 2.0")
                .append(" * (the \"License\"); you may not use this file except in compliance with")
                .append(" * the License.  You may obtain a copy of the License at")
                .append(" *")
                .append(" *     http://www.apache.org/licenses/LICENSE-2.0")
                .append(" *")
                .append(" * Unless required by applicable law or agreed to in writing, software")
                .append(" * distributed under the License is distributed on an \"AS IS\" BASIS,")
                .append(" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.")
                .append(" * See the License for the specific language governing permissions and")
                .append(" * limitations under the License.")
                .append(" * ")
                .append(" * Generated by mosn mecha.")
                .append2(" */");

    }

    protected String plainText(String path) {
        return FileReader.plainText(path);
    }

    protected byte[] plainBytes(String path) {
        return FileReader.plainBytes(path);
    }
}
