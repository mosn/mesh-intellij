/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ${go_package_name}

import (
	"context"
	"errors"

	"mosn.io/api"
)

type StatusMapping struct{}

func (m StatusMapping) MappingHeaderStatusCode(ctx context.Context, headers api.HeaderMap) (int, error) {
	cmd, ok := headers.(api.XRespFrame)
	if !ok {
		return 0, errors.New("no response status in headers")
	}

	var code uint32

	code = cmd.GetStatusCode()

	panic("实现: 私有协议状态码转换成标准http的状态码，用于mosn内部按照http维度统计调用信息")
	// TODO:  删除panic以及以下注释，实现MappingHeaderStatusCode方法:
	// example 假设私有协议状态码0代表成功，则返回http.StatusOK
	// 假设私有协议状态码4（ResponseStatusServerThreadPoolBusy）代表线程池忙，则返回http.StatusServiceUnavailable
	// switch code {
	// case ResponseStatusSuccess:
	// 	return http.StatusOK, nil
	// case ResponseStatusServerThreadPoolBusy:
	// 	return http.StatusServiceUnavailable, nil
	// case ResponseStatusTimeout:
	// 	return http.StatusGatewayTimeout, nil
	// case ResponseStatusConnectionClosed:
	// 	return http.StatusBadGateway, nil
	// default:
	// 	return http.StatusInternalServerError, nil
	// }

	return int(code), nil
}
